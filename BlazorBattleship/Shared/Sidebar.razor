@using BlazorBattleship.Shared

@code {
    #region Parameters
    [Parameter] public Ship[]? Ships { get; set; } // Receiving the ships array from the parent component
    [Parameter] public HubConnection? HubConnection { get; set; }
    [Parameter] public string UserName { get; set; } = "";
    #endregion
    #region Declarations
    #region Chat
    public List<string> Messages = new List<string>();
    private string newMessage = "";
    #endregion
    #endregion
    #region Connection Functions
    protected override async Task OnInitializedAsync()
    {
        if (HubConnection != null)
        {
            HubConnection.On<string, string>("ReceiveMessage", (user, message) =>
            {
                string formattedMessage = $"{DateTime.Now} | <span style='color: red; font-weight: bold;'>{user}</span>: {message}";
                Messages.Insert(0, formattedMessage);
                InvokeAsync(StateHasChanged);
            });
        }
    }
    private async Task SendMessage()
    {
        if (HubConnection is not null && !string.IsNullOrWhiteSpace(newMessage))
        {
            await HubConnection.SendAsync("SendMessage", UserName , newMessage);
            newMessage = "";
        }
    }
    #endregion
}

<div class="sidebar-text">
    <h3>Your Ships</h3>
    <ul>
        @if (Ships == null || Ships.Length == 0) // Check if Ships is null or empty
        {
            <li>No ships available</li>
        }
        else
        {
            @foreach (var ship in Ships)
            {
                @if (ship != null)
                {
                    <li>@ship.name: @ship.hp HP
                        @if (ship.IsDestroyed())
                        {
                            <strong>(Destroyed)</strong>
                        }
                    </li>
                }
            }
        }
    </ul>
</div>
